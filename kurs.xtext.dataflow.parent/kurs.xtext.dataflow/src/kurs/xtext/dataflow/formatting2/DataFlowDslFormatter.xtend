/*
 * generated by Xtext 2.12.0
 */
package kurs.xtext.dataflow.formatting2

import com.google.inject.Inject
import kurs.xtext.dataflow.dataFlowDsl.KComponent
import kurs.xtext.dataflow.dataFlowDsl.KMessage
import kurs.xtext.dataflow.dataFlowDsl.KPackage
import kurs.xtext.dataflow.dataFlowDsl.KService
import kurs.xtext.dataflow.dataFlowDsl.Model
import kurs.xtext.dataflow.services.DataFlowDslGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import kurs.xtext.dataflow.dataFlowDsl.KInstance
import kurs.xtext.dataflow.dataFlowDsl.KConnection
import kurs.xtext.dataflow.dataFlowDsl.KPort

class DataFlowDslFormatter extends AbstractFormatter2 {

	@Inject extension DataFlowDslGrammarAccess

	def dispatch void format(Model model, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (KPackage kPackage : model.getPackages()) {
			kPackage.regionFor.keyword("{").prepend[newLine];
			kPackage.regionFor.keyword("{").append[newLine];
			interior(kPackage.regionFor.keyword("{"), kPackage.regionFor.keyword("}"))[indent];
			kPackage.regionFor.keyword("}").prepend[newLine];
			kPackage.regionFor.keyword("}").append[newLine];
			kPackage.format;
		}
	}

	def dispatch void format(KPackage kPackage, extension IFormattableDocument document) {

		for (KPackage _kPackage : kPackage.getPackages()) {
			_kPackage.regionFor.keyword("{").prepend[newLine];
			_kPackage.regionFor.keyword("{").append[newLine];
			interior(_kPackage.regionFor.keyword("{"), _kPackage.regionFor.keyword("}"))[indent];
			_kPackage.regionFor.keyword("}").prepend[newLine];
			_kPackage.regionFor.keyword("}").append[newLine];
			_kPackage.format;
		}

		for (KComponent kComponent : kPackage.getComponents()) {
			kComponent.regionFor.keyword("{").prepend[newLine];
			kComponent.regionFor.keyword("{").append[newLine];
			interior(kComponent.regionFor.keyword("{"), kComponent.regionFor.keyword("}"))[indent];
			kComponent.regionFor.keyword("}").prepend[newLine];
			kComponent.regionFor.keyword("}").append[newLine];
			kComponent.format;

			for (KPort kPort : kComponent.getPorts()) {
				kPort.append[newLine];
				kPort.format;
			}
		}
		for (KMessage kMessage : kPackage.getMessages()) {
			kMessage.append[newLine];
			kMessage.format;
		}
		for (KService kService : kPackage.getServices()) {
			kService.regionFor.keyword("{").prepend[newLine];
			kService.regionFor.keyword("{").append[newLine];
			kService.regionFor.keyword("}").prepend[newLine];
			kService.regionFor.keyword("}").append[newLine];
			interior(kService.regionFor.keyword("{"), kService.regionFor.keyword("}"))[indent];
			for (KInstance kInstance : kService.getInstances()) {
				kInstance.append[newLine];
				kInstance.format;
			}
			for (KConnection kConnection : kService.getConnections()) {
				kConnection.append[newLine];
				kConnection.format;
			}
			kService.format;
		}
	}

// TODO: implement for KComponent, KService
}
